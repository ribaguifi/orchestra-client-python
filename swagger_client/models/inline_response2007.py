# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse2007(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'url': 'str',
        'state': 'str',
        'amount': 'float',
        'currency': 'str',
        'created_at': 'datetime',
        'modified_at': 'datetime',
        'bill': 'str',
        'source': 'str'
    }

    attribute_map = {
        'url': 'url',
        'state': 'state',
        'amount': 'amount',
        'currency': 'currency',
        'created_at': 'created_at',
        'modified_at': 'modified_at',
        'bill': 'bill',
        'source': 'source'
    }

    def __init__(self, url=None, state=None, amount=None, currency=None, created_at=None, modified_at=None, bill=None, source=None):  # noqa: E501
        """InlineResponse2007 - a model defined in Swagger"""  # noqa: E501
        self._url = None
        self._state = None
        self._amount = None
        self._currency = None
        self._created_at = None
        self._modified_at = None
        self._bill = None
        self._source = None
        self.discriminator = None
        if url is not None:
            self.url = url
        if state is not None:
            self.state = state
        self.amount = amount
        if currency is not None:
            self.currency = currency
        if created_at is not None:
            self.created_at = created_at
        if modified_at is not None:
            self.modified_at = modified_at
        self.bill = bill
        if source is not None:
            self.source = source

    @property
    def url(self):
        """Gets the url of this InlineResponse2007.  # noqa: E501


        :return: The url of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InlineResponse2007.


        :param url: The url of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def state(self):
        """Gets the state of this InlineResponse2007.  # noqa: E501


        :return: The state of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this InlineResponse2007.


        :param state: The state of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def amount(self):
        """Gets the amount of this InlineResponse2007.  # noqa: E501


        :return: The amount of this InlineResponse2007.  # noqa: E501
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this InlineResponse2007.


        :param amount: The amount of this InlineResponse2007.  # noqa: E501
        :type: float
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")  # noqa: E501

        self._amount = amount

    @property
    def currency(self):
        """Gets the currency of this InlineResponse2007.  # noqa: E501


        :return: The currency of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this InlineResponse2007.


        :param currency: The currency of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse2007.  # noqa: E501


        :return: The created_at of this InlineResponse2007.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse2007.


        :param created_at: The created_at of this InlineResponse2007.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this InlineResponse2007.  # noqa: E501


        :return: The modified_at of this InlineResponse2007.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this InlineResponse2007.


        :param modified_at: The modified_at of this InlineResponse2007.  # noqa: E501
        :type: datetime
        """

        self._modified_at = modified_at

    @property
    def bill(self):
        """Gets the bill of this InlineResponse2007.  # noqa: E501


        :return: The bill of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._bill

    @bill.setter
    def bill(self, bill):
        """Sets the bill of this InlineResponse2007.


        :param bill: The bill of this InlineResponse2007.  # noqa: E501
        :type: str
        """
        if bill is None:
            raise ValueError("Invalid value for `bill`, must not be `None`")  # noqa: E501

        self._bill = bill

    @property
    def source(self):
        """Gets the source of this InlineResponse2007.  # noqa: E501


        :return: The source of this InlineResponse2007.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this InlineResponse2007.


        :param source: The source of this InlineResponse2007.  # noqa: E501
        :type: str
        """

        self._source = source

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2007, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2007):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
